@using CarRental.Comparer.Web.Requests.DTOs.Offers
@using CarRental.Comparer.Web.Services.GeolocationServices

@inject IGeoLocationService GeolocationService

<MudDialog>
	<TitleContent>
		<MudText Typo="Typo.h6">
			<MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3" /> Fill required details
		</MudText>
	</TitleContent>
	<DialogContent>
		<EditForm EditContext="editContext">
			<DataAnnotationsValidator />
			<MudStack Spacing="3" Class="mt-4">
				<MudNumericField @bind-Value="CreateOfferDto.DrivingLicenseYears" Label="Driving License Years" For="@(() => CreateOfferDto.DrivingLicenseYears)" Required="true" />
				<MudNumericField @bind-Value="CreateOfferDto.Age" Label="Age" For="@(() => CreateOfferDto.Age)" Required="true" />
				<MudNumericField @bind-Value="CreateOfferDto.Latitude" Label="Latitude" Required="true"/>
				<MudNumericField @bind-Value="CreateOfferDto.Longitude" Label="Longitude" Required="true"/>
			</MudStack>
		</EditForm>
	</DialogContent>
	<DialogActions>
		<MudButton OnClick="Submit" Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit">Submit</MudButton>
		<MudButton OnClick="Cancel" ButtonType="ButtonType.Button">Cancel</MudButton>
	</DialogActions>
</MudDialog>

@code {
	[CascadingParameter] 
	private MudDialogInstance? MudDialog { get; set; }

	private CreateOfferDto CreateOfferDto { get; set; } = new(2, 21, 0, 0);
	private EditContext editContext;

	protected override async Task OnInitializedAsync()
	{
		editContext = new EditContext(CreateOfferDto);

		GeolocationResult currentPositionResult = await GeolocationService.GetCurrentPosition();
		if (currentPositionResult.IsSuccess)
		{
			CreateOfferDto.Longitude = (decimal)currentPositionResult.Position.Coords.Longitude;
			CreateOfferDto.Latitude = (decimal)currentPositionResult.Position.Coords.Latitude;
		}

		StateHasChanged();
	}

	private void Submit()
	{
		if (editContext.Validate()) 
			MudDialog?.Close(DialogResult.Ok(CreateOfferDto));
	}

	private void Cancel()
	{
		MudDialog?.Cancel();
	}
}
