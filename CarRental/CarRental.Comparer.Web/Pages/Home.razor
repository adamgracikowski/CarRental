@page "/"
@using CarRental.Comparer.Web.PagesNavModels
@using CarRental.Comparer.Web.Requests.CarServices
@using CarRental.Comparer.Web.Requests.DTOs.Makes
@using CarRental.Comparer.Web.Services
@using CarRental.Comparer.Web.Services.StateContainer
@using CarRental.Comparer.Web.Extensions
@inject NavigationManager NavigationManager
@inject ThemeService ThemeService 
@inject StateContainer StateContainer
@inject ICarService CarService

<PageTitle>Home</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true" Align="ThemeService.align">Car Rental</MudText>
<MudText Typo="Typo.h4" GutterBottom="true" Align="ThemeService.align">Find your rental car</MudText>
<MudPaper class="mb-4 mt-4" Outlined="true">
    <MudStack Row="true" JustifyContent="Center" AlignItems="AlignItems.Center" Height="100vh">
        <MudItem xs="6">
            <MudPaper class ="ml-2" mb-2>
                <MudSelect @bind-Value="Make" Label="Select make" Placeholder="Please Select" AdornmentIcon="@Icons.Material.Filled.Warehouse" AdornmentColor="Color.Primary" Variant="Variant.Outlined">
                    <MudSelectItem Value="@("All")">All</MudSelectItem>
                    @if (cars != null && cars.Any())
                    {
                        @foreach (var carMake in cars)
                        {
                            <MudSelectItem Value="@carMake.Name">@carMake.Name</MudSelectItem>
                        }
                    }
                    else
                    {
                        <MudSelectItem Value="Make" Disabled="true">No makes available</MudSelectItem>
                    }
                </MudSelect>
            </MudPaper>
        </MudItem>
        <MudItem xs="6">
            <MudSelect @bind-Value="Model" Label="Select model" Placeholder="Please Select" AdornmentIcon="@Icons.Material.Filled.ElectricCar" AdornmentColor="Color.Primary" Variant="Variant.Outlined">
                <MudSelectItem Value="@("All")">All</MudSelectItem>
                @if (!string.IsNullOrEmpty(Make) && cars != null)
                 {
                    var selectedMake = cars.FirstOrDefault(m => m.Name == Make);
                    if (selectedMake != null && selectedMake.Models != null && selectedMake.Models.Any())
                    {
                        foreach (var model in selectedMake.Models)
                        {
                            <MudSelectItem Value="@model.Name">@model.Name</MudSelectItem>
                        }
                    }
                    else
                    {
                        if (Make != "All")
                        {
                            <MudSelectItem Value=Error Disabled="true">No models available</MudSelectItem>
                        }
                    }
                }
                else
                {
                    <MudSelectItem Value=Error Disabled="true">Select a make first</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="2">
            <MudButton OnClick=@(() => OnMakeModelClick(Make,Model)) Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Search" Color="Color.Primary" FullWidth = "true" Style="height: 60px">Search</MudButton>
        </MudItem>
    </MudStack>
</MudPaper>

<MudContainer>
    @if (cars != null)
    {
        <MudPaper Class="d-flex flex-wrap gap-4" Width="100%" MaxWidth="100%">
            @foreach (var make in cars)
            {
                    <MudCard Class="m-2 p-2" Style="cursor: pointer; width: 200px;">
                    <MudCardContent Class="d-flex flex-column justify-center align-center">
                        <MudImage Src="@make.LogoUrl"
                        Style="width: 50%; height: auto;"/>

                            <MudText Align="Align.Center" Typo="Typo.h5">@make.Name</MudText>
                            @foreach (var model in make.Models)
                            {
                            <MudText Align="Align.Center" Typo="Typo.body2">- @model.Name</MudText>
                            }
                        </MudCardContent>
                    <MudCardActions Class="d-flex justify-center">
                            <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@(() => OnMakeClick(make))">
                                View models
                            </MudButton>
                        </MudCardActions>
                    </MudCard>
            }
        </MudPaper>
    }
</MudContainer>
@code 
{
    protected override async void OnInitialized()
    {
        var makeList = await CarService.GetAvailableCars();
        cars = makeList.Makes;

        StateHasChanged();
    }

    public string Search { get; set; }

    private string Error = "error";

    private string Make { get; set; } 

    private string Model { get; set; }

    private ICollection<MakeWithModelsDto> cars {get; set;}

    private void OnMakeClick(MakeWithModelsDto make)
    {
        var navArgs = new HomeToRentalCars(cars); 
        navArgs.SelectedMake = make.Name;
        StateContainer.AddRoutingObjectParameter(navArgs);

        NavigationManager.NavigateTo($"rentalcars/{navArgs.GetHashCode()}");
    }

    private void OnMakeModelClick(string make, string model)
    {
        var navArgs = new HomeToRentalCars(cars);
        navArgs.SelectedMake = make;
        navArgs.SelectedModel = model;
        StateContainer.AddRoutingObjectParameter(navArgs);

        NavigationManager.NavigateTo($"rentalcars/{navArgs.GetHashCode()}");
    }
}
